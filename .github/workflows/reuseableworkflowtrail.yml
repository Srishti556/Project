name: Environment Message

on:
  workflow_call:
   inputs:
     Configuration:
        type: string
        description: 'Environment Setup'
        required: true 
        default: 'release'
   outputs:
     bmconclusion:
        value: ${{ jobs.build_message.outputs.bmconclusion }}   
     umconclusion:
        value: ${{ jobs.upload_message.outputs.umconclusion }} 
     pmconclusion:
        value: ${{ jobs.process_message.outputs.pmconclusion }}
jobs:
   build_message:
       runs-on: ubuntu-latest
       outputs:
         bmconclusion: ${{ steps.build.outputs.bmconclusion }}
       steps:
        - id: build
          run:  |
             echo "Building Message....."
        - name: build
          run: |
             echo "Build"
             echo "bmconclusion=success" >> $GITHUB_OUTPUT
   set_environment:
       runs-on: ubuntu-latest
       outputs:
         environment: ${{ steps.UploadMessage.outputs.environment }} 
       steps:
        - name: setEnvironment
          run: |            
            if [[ "${{inputs.Configuration}}"  == "release" ]]; then
               echo "environment=production" >> $GITHUB_OUTPUT
   upload_message:
       runs-on: ubuntu-latest
       needs: [build_message,set_environment]
       environment: ${{ needs.set_environment.outputs.environment }}
       outputs:
         umconclusion: ${{ steps.UploadMessage.outputs.umconclusion }}
       steps:
        - id: UploadMessage
          run: |
             echo "Uploading Message....."
        - id: Upload-Message
          run: |
             echo "Upload"
             echo "umconclusion=success" >> $GITHUB_OUTPUT
   process_message:
       runs-on: ubuntu-latest
       needs: upload_message
       outputs:
         pmconclusion: ${{ steps.ProcessMessage.outputs.pmconclusion }}
       steps:
        - id: ProcessMessage
          run: |
             echo "process Message....."
        - id: Process
          run: |
             echo "process Message....."
             echo "pconclusion=success" >> $GITHUB_OUTPUT
          
